(function(){var loadHandler=window['s_{44037E99-FFA8-4B94-8074-2A04E002AB48}'];var scenarioJson = "";var skinSettingsJson = {"characterSpeech":{"fontFamily":"Open Sans","type":"standard"},"colors":{"audio.playback":{"value":"#339BE0"},"button.background.normal":{"value":"#339BE0"},"button.background.over":{"value":"#3A8FC7"},"button.text.normal":{"value":"#FFFFFF"},"button.text.over":{"value":"#FFFFFF"},"characterSpeech.background":{"alpha":"0.89804","value":"#FFFFFF"},"characterSpeech.text":{"value":"#000000"},"hyperlinks":{"value":"#097CE7"},"message.background":{"alpha":"0.89804","value":"#FFFFFF"},"message.text":{"value":"#000000"},"pageBackground":{"value":"#263944"},"reply.background.normal":{"alpha":"0.89804","value":"#FFFFFF"},"reply.background.over":{"alpha":"0.89804","value":"#D6ECFF"},"reply.text":{"value":"#31363F"},"title.background":{"alpha":"0.20784","value":"#425159"},"title.text":{"value":"#E8E8E8"}},"message":{"fontFamily":"Open Sans","type":"standard"},"moodMeter":{"type":"standard","visible":true},"reply":{"bullet":{"type":"numbers"},"fontFamily":"Open Sans","type":"standard"},"showTitle":false};var i18nJson = {"AUTHORIZATION_FORM_ERROR_EMAIL":"Please enter a valid email address","AUTHORIZATION_FORM_ERROR_FIELD_REQUIRED":"Field is required","AUTHORIZATION_FORM_SEND_TO_STUDENT_EMAIL_HINT":"Results will be sent to this email","AUTHORIZATION_FORM_TITLE":"Enter your details:","Player.Button.Back":"Back","Player.Button.Continue":"Continue","Player.Button.Finish":"Finish","Player.Button.No":"No","Player.Button.OK":"OK","Player.Button.Restart":"Restart","Player.Button.Skip":"Skip","Player.Button.Yes":"Yes","Player.Message.Btn.Text":"Continue","Player.Message.Start.Btn.Text":"Start","Player.Msg.ResumePrompt":"Would you like to resume where you left off?","Player.Msg.ResumePromptTitle":"Continue simulation","Player.Msg.SendReportToEmailFailed":"Failed to send dialog results to email. Do you want to retry?","Player.Msg.SendReportToUrlFailed":"Failed to send dialog results to the server. Do you want to retry?","Player.Msg.SendingReport":"Sending dialog results...","Player.Msg.UserScoreTemplate(%USER_SCORE%)":"Your score is %USER_SCORE% points","Player.Msg.UserScoreWithMaxScoreTemplate(%USER_SCORE%)":"Your score is %USER_SCORE% out of %MAX_SCORE% points"};var reportTemplate = "<scenarioReportTemplate version=\"4\" xmlns=\"http:\/\/www.ispringsolutions.com\/talkmaster\/scenario\/1\"><templates><template id=\"useTakersEmailSettings\"><![CDATA[false]]><\/template><\/templates><messages><message id=\"from\"><![CDATA[iSpring Solutions]]><\/message><message id=\"subject\"><![CDATA[[%SIM_STATUS%] Simulation Results: &quot;%SIM_TITLE%&quot;]]><\/message><message id=\"user\"><![CDATA[User:]]><\/message><message id=\"userId\"><![CDATA[User:]]><\/message><message id=\"disclaimer\"><![CDATA[This is an automatically generated email to report dialog results. You are receiving this because the dialog author has specified your email address for sending dialog results.]]><\/message><message id=\"gradedScenario\"><![CDATA[Graded Simulation]]><\/message><message id=\"surveyScenario\"><![CDATA[Simulation]]><\/message><message id=\"userScore\"><![CDATA[User Score:]]><\/message><message id=\"maxScore\"><![CDATA[Maximum Score:]]><\/message><message id=\"passingScore\"><![CDATA[Passing Score:]]><\/message><message id=\"duration\"><![CDATA[Simulation Duration:]]><\/message><message id=\"scenarioResult\"><![CDATA[Result:]]><\/message><message id=\"passed\"><![CDATA[Simulation Passed]]><\/message><message id=\"failed\"><![CDATA[Simulation Failed]]><\/message><message id=\"finished\"><![CDATA[Simulation Finished]]><\/message><message id=\"score\"><![CDATA[Score:]]><\/message><message id=\"spentTimeFormat\"><![CDATA[%SPENT_TIME%]]><\/message><\/messages><\/scenarioReportTemplate>";var maxScore = '0';var reportUrl = "https://s4.ispringsolutions.com";loadHandler&&loadHandler(0, 's_EA47F598-1964-49F2-ADFA-D117643958F3', scenarioJson, skinSettingsJson, i18nJson, reportTemplate, maxScore, reportUrl);})();